@model ShowRoomManagement.PresentationLayer.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{*@
<form class="form-horizontal" action="/Account/Register" method="post" role="form" onsubmit="return validate()" style="color:white">
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @*@Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })*@
            <input type="text" class="form-control" id="name" name="FullName" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @*@Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })*@
            <input type="text" class="form-control" id="phone" name="PhoneNumber"/>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserRole, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.UserRole, ViewBag.Roles as SelectList, "Select Role", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function validate() {
        var name = document.getElementById("name").value;
        var phone = document.getElementById("phone").value;
        var con = /^([a-zA-z\s]{3,50})$/;
        var mobilereg = /^([0-9]{10})$/;
        var isvalid = con.test(name);
        if (!isvalid) {
            alert("Name should not contain number");
            return false;
        }
        var isvalid2 = mobilereg.test(phone);
        if (!isvalid2) {
            alert("enter valid phone number");
            return false;
        }
    }
</script>